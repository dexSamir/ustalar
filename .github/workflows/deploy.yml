name: Frontend CI/CD

on:
  push:
    branches:
      - master
env:
  REGISTRY: docker.io
  IMAGE_NAME: therzarzayev/ustalar:${{ github.ref_name }}-${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: npm install, build and test
        run: |
          npm install
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: dist/

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install sshpass and setup SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts || true

      - name: Deploy via SSH
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASS: ${{ secrets.SERVER_PASS }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          echo "Deploying to $SERVER_IP"
          sshpass -p "$SERVER_PASS" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD &&
            docker pull $IMAGE_NAME &&
            docker stop ustalar-front || true &&
            docker rm ustalar-front || true &&
            docker run -d --name ustalar-front --restart=always -p 3000:80 $IMAGE_NAME
          "
